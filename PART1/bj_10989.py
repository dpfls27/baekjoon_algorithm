import sys
input = sys.stdin.readline

#계수정렬 활용
n = int(input())
arr = [0] * (10000 + 1) # 입력값이 10000개까지 주어지니 10000 + 1개의 리스트 선언 
# 이 리스트의 인덱스에 해당하는 숫자는 입력한 숫자이며 arr[인덱스]의 값은 입력한 숫자가 등장한 횟수를 표현하려고 만든 리스트

#각 입력값에 해당하는 인덱스의 값 증가 다시말해 arr = [0, 1, 1, 2, 1, 0, 0, ..., 0] 이런식으로 저장이 되면서 
#각 입력한 숫자가 등장한 횟수가 리스트에 기록되게 되는 것 
for _ in range(n):
    arr[int(input())] += 1
  

for i in range(len(arr)):
    if arr[i] != 0: # 등장 횟수가 0이 아닌 경우 그 숫자는 등장 횟수만큼 출력 시켜야함 
        for _ in range(arr[i]): # 그래서 arr[i]를 for문돌려서 print 하는거 
            print(i) #작거나 "같은" 자연수 일때 같으면 반복되어 출력해야 하므로 아래와 같은 이중for문이 생기게 된것
 
           
'''
    이때 우리가 sort 같은 정렬함수를 쓰지 않았는데 어떻게 정렬이 된걸까?
        
    15줄~18줄의 이중for문을 확인하자 
    예를 들어 arr = [0, 1, 1, 2, 1, 0, 0, ..., 0] 이 상태 라고 할 때 
    인덱스 값 = 입력한 숫자, arr의 값 = 등장 숫자 이므로 
    위 예시에서 arr[3] = 2는 3이 2번 등장했다는 뜻 
    당연히 arr[i]를 순차적으로 for문 돌려서 print(i)를 하면 arr[0]부터 탐색을 하니까 
    당연히 출력하는 인덱스의 값(i값)은 무조건 0부터 출력이 될테니 바로 정렬이 되는 것 
    
    
    요약하면, 
    입력하는 수가 많으니까 append로 받자니 메모리가 초과되기 때문에 
    아예 입력할 수 있는 수(1부터 10000)를 인덱스의 값으로 표현가능한 arr = [0] * (10000 + 1)라는 리스트를 하나 만들고
    입력한 수의 횟수를 arr에 +=1 로 1씩 증가하는 코드로 저장을 해서 
    마지막에 인덱스 값을 0부터 출력시킴으로써 오름차순 정렬된 값으로 출력 시키고 
    만약 같은 값이 여러번 입력될 경우 그 같은 값이 입력된 횟수만큼 출력되어야 하므로 
    그런 상황에서만 이중 for문을 통해 한번 더 반복 출력을 해주도록 한 것  
    
'''